
def dls(source,level,vis,limit,goal):
    if(level>limit):
        return False
    if(source==goal):
        return True
    vis[source]=1
    
    for i in adj[source]:
        if(vis[i]==0):
            flag=dls(i,level+1,vis,limit,goal)
            if(flag==True):
                return True
            
    
    return False

n=int(input("Enter No.of vertices:"))
m=int(input("No.of edges:"))
adj=[[] for i in range(n+1)]
vis=[0 for i in range(n+1)]
vis[0]=1
# print(adj)a
print("Enter edges:(u,v)")
for i in range(m):
    u,v=map(int,input().split())
    adj[u].append(v)
goal=int(input("enter goal state:"))
limit=int(input("enter max depth:"))
# dls(source,level,vis,limit,goal):
for i in range(limit+1):
    vis=[0 for i in range(n+1)]
    vis[0]=1
    ans=dls(1,0,vis,i,goal)
    if(ans):
        print("goal state is found",i)
    else :
        print("goal state is not found",i)


output

Enter No.of vertices:15
No.of edges:14
Enter edges:(u,v)
1 2
1 3
2 4
2 5
3 6
3 7
4 8
4 9
5 10
5 11
6 12
6 13
7 14
7 15
enter goal state:6
enter max depth:3
goal state is not found 0
goal state is not found 1
goal state is found 2
goal state is found 3